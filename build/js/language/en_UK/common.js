define({
    "systemName": "Intelligent Energy Management System",
    "subSystemName": "iCleanPower",

    "language": {
        "zh_CN": "中文(简体)",
        "en_US": "English(US)",
        "en_UK": "English(UK)",
        "ja_JP": "日本語"
    },

    "validator": {
        "required": "It cannot be null.",
        "requiredFormat": "{0} cannot be null.",
        "remote": "Please fix this field",
        "email": "Invalid email address.",
        "url": "Invalid URL",
        "date": "Invalid date",
        "dateISO": "Please enter a valid (ISO) date.",
        "number": "Please enter a figure.",
        "digits": "Please enter an integer.",
        "creditcard": "Please enter a valid credit card number.",
        "equalTo": "Passwords entered do not match.",
        "maxlength": "It cannot exceed {0} characters.",
        "minlength": "Enter at least {0}characters.",
        "rangelength": "Input length is limited between {0} and {1}.",
        "range": "Please enter the value from {0} to {1}.",
        "max": "Please enter the value not more than {0}.",
        "min": "Please enter the value not less than {0}.",
        "space": "Space cannot appear at the very beginning or the end.",
        "mobile": "Format error of mobile phone number.",
        "phone": "Format error of phone number.",
        "tel": "Format error of contact number.",
        "zip": "Format error of post code.",
        "currency": "Format error of currency.",
        "qq": "Format error of QQ number.",
        "age": "Age must be an integer from 0 to 120.",
        "idcard": "Please enter your ID card No. correctly.",
        "ip": "Format error of IP address.",
        "uploadFile": "Upload file",
        "perNumCheck": "Please enter a number greater than 0 and no greater than 100, with less than {0} digits after the decimal point.",
        "stringCheck": "Only non-special characters composed of Chinese characters, English letters, figures and underlines can be contained",
        "devNameCheck": "{0} shall not contain < ' > & \" , | null",
        "signsCheck": "Comma cannot be input",
        "PSNameCheck": "Quotation marks at the beginning and end of the station name cannot be the same",
        "port": "Port should be an integer between 0 and 65535",
        "positiveInt": "Please input a positive integer.",
        "vacSepecialString": "Special characters such as < ' > & / , | null etc. shall not be included.",
        "specialChars": "Special characters such as < ' > & \" , \\ / | { } null etc. shall not be included.",
        "valNumberCheck": "Please input a number",
        "lt": "Please input a number less than {0}",
        "le": "Please input a number less than or equal to {0}",
        "gt": "Please input a number greater than {0}",
        "ge": "Please input a number greater than or equal to {0}"
    },

    "ajax": {
        "gatewayTimeout": "Network abnormality occurs. It is possible that you have been disconnected with the server, please try again later to reload the page.",
        "connectError": "Network connection abnormality occurs, please check the server.",
        "badgateway": "Network connection abnormality occurs, please check the server.",
        "error": "Server abnormality occurs, please check the server.",
        "noRight": [
            "The user has no authorization",
            "Sorry, you do not have the ",
            "authority to access this address."
        ],
        "noFound": [
            "The link does not exist.",
            "Sorry, the address you are trying to access ",
            "does not exist."
        ]
    },

    "unit": {
        "topPowerUnit": "kW·h",
        "powerUnit": "10MW·h",
        "KWh": "kWh",
        "WKWh": "thousand KWh",
        "KW": "kW",
        "MW": "MW",
        "GW": "GW",
        "GWh": "GWh",
        "co2Unit": "t",
        "coalUnit": "t",
        "treeUnit": "m3",
        "co2WUnit": "10kt",
        "coalWUnit": "10kt",
        "treeWUnit": "10km3",
        "tree_unit": " ",
        "wtree_unit": "10 thousand",
        "curRadiantUnit": "kW·h/m2",
        "radiantUnit": "W/m2",
        "powerCapacityUnit": "kW",
        "temperatureUnit": "℃",
        "lngLatUnit": "°",
        "speedUnit": "m/s",
        "degree": "degree",
        "TInsolation": "MJ/㎡",
        "Irradiance": "W/㎡",
        "installCapacityUnit": "MW",
        "powerRate": "%",
        "times": "times",
        "productPowerUnit": "kWh",
        "unit_ton": "ton",
        "currentUnit": "A",
        "voltageUnit": "V",
        "percentUnit": "%",
        "WUnit": "W",
        "kWUnit": "kW",
        "WhUnit": "Wh",
        "kWhUnit": "kWh",
        "VarUnit": "Var",
        "kVarUnit": "kVar",
        "kVarhUnit": "kVarh",
        "kVAUnit": "kVA",
        "HzUnit": "Hz",
        "MΩUnit": "MΩ",
        "NA": "None",
        "timeDem": [
            "Year",
            "Month",
            "Day",
            "Week",
            "h",
            "m",
            "s",
            "Hour",
            "minute",
            "second"
        ],
        "numberUnit": [
            "",
            "ten",
            "hundred",
            "thousand",
            "10 thousand",
            "100 thousand",
            "million",
            "10 million",
            "100 million",
            "billion",
            "10 billion",
            "100 billion",
            "trillion",
            "10 trillion",
            "100 trillion",
            "1000 trillion"
        ],
        "geographicAzimuth": [
            "North(N)",
            "North-northeast(NNE)",
            "Northeast(NE)",
            "East-northeast(ENE)",
            "East(E)",
            "East-southeast(ESE)",
            "Southeast(SE)",
            "South-southeast(SSE)",
            "South(S)",
            "South-southwest(SSW)",
            "Southwest(SW)",
            "West-southwest(WSW)",
            "West(W)",
            "West-northwest(WNW)",
            "Northwest(NW)",
            "North-northwest(NNW)"
        ],
        "dateLimit": [
            "Last year",
            "This year",
            "The next year",
            "Last month",
            "This month",
            "The next month",
            "yesterday",
            "Today",
            "tomorrow",
            "total"
        ],
        "brackets": [
            "(",
            ")"
        ],
        "colon": ":",
        "stationUnit": " ",
        "inverterUnit": " ",
        "stringUnit": " ",
        "RMBUnit": "yuan",
        "WRMBUnit": "10000 yuan",
        "KRMBUnit": "1000 yuan",
        "KWUnit": "KW",
        "WKWUnit": "10MW",
        "houseUnit": " ",
        "alarmUnit": " ",
        "personUnit": "people"
    },

    "dateFormat": {
        "yyyymmddhhss": "dd/MM/yyyy HH:mm:ss",
        "yyyymmdd": "dd/MM/yyyy",
        "yyyymm": "MM/yyyy",
        "yyyy": "yyyy",
        "MMdd": "dd-MM",
        "yyyyddmm": "dd/MM/yyyy"
    },

    "map": {
        "zoomsTitle": [
            "Zoom in",
            "Zoom out"
        ],
        "mapType": [
            "2D map",
            "Satellite map"
        ]
    }
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiIiwic291cmNlcyI6WyJsYW5ndWFnZS9lbl9VSy9jb21tb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiZGVmaW5lKHtcbiAgICBcInN5c3RlbU5hbWVcIjogXCJJbnRlbGxpZ2VudCBFbmVyZ3kgTWFuYWdlbWVudCBTeXN0ZW1cIixcbiAgICBcInN1YlN5c3RlbU5hbWVcIjogXCJpQ2xlYW5Qb3dlclwiLFxuXG4gICAgXCJsYW5ndWFnZVwiOiB7XG4gICAgICAgIFwiemhfQ05cIjogXCLkuK3mloco566A5L2TKVwiLFxuICAgICAgICBcImVuX1VTXCI6IFwiRW5nbGlzaChVUylcIixcbiAgICAgICAgXCJlbl9VS1wiOiBcIkVuZ2xpc2goVUspXCIsXG4gICAgICAgIFwiamFfSlBcIjogXCLml6XmnKzoqp5cIlxuICAgIH0sXG5cbiAgICBcInZhbGlkYXRvclwiOiB7XG4gICAgICAgIFwicmVxdWlyZWRcIjogXCJJdCBjYW5ub3QgYmUgbnVsbC5cIixcbiAgICAgICAgXCJyZXF1aXJlZEZvcm1hdFwiOiBcInswfSBjYW5ub3QgYmUgbnVsbC5cIixcbiAgICAgICAgXCJyZW1vdGVcIjogXCJQbGVhc2UgZml4IHRoaXMgZmllbGRcIixcbiAgICAgICAgXCJlbWFpbFwiOiBcIkludmFsaWQgZW1haWwgYWRkcmVzcy5cIixcbiAgICAgICAgXCJ1cmxcIjogXCJJbnZhbGlkIFVSTFwiLFxuICAgICAgICBcImRhdGVcIjogXCJJbnZhbGlkIGRhdGVcIixcbiAgICAgICAgXCJkYXRlSVNPXCI6IFwiUGxlYXNlIGVudGVyIGEgdmFsaWQgKElTTykgZGF0ZS5cIixcbiAgICAgICAgXCJudW1iZXJcIjogXCJQbGVhc2UgZW50ZXIgYSBmaWd1cmUuXCIsXG4gICAgICAgIFwiZGlnaXRzXCI6IFwiUGxlYXNlIGVudGVyIGFuIGludGVnZXIuXCIsXG4gICAgICAgIFwiY3JlZGl0Y2FyZFwiOiBcIlBsZWFzZSBlbnRlciBhIHZhbGlkIGNyZWRpdCBjYXJkIG51bWJlci5cIixcbiAgICAgICAgXCJlcXVhbFRvXCI6IFwiUGFzc3dvcmRzIGVudGVyZWQgZG8gbm90IG1hdGNoLlwiLFxuICAgICAgICBcIm1heGxlbmd0aFwiOiBcIkl0IGNhbm5vdCBleGNlZWQgezB9IGNoYXJhY3RlcnMuXCIsXG4gICAgICAgIFwibWlubGVuZ3RoXCI6IFwiRW50ZXIgYXQgbGVhc3QgezB9Y2hhcmFjdGVycy5cIixcbiAgICAgICAgXCJyYW5nZWxlbmd0aFwiOiBcIklucHV0IGxlbmd0aCBpcyBsaW1pdGVkIGJldHdlZW4gezB9IGFuZCB7MX0uXCIsXG4gICAgICAgIFwicmFuZ2VcIjogXCJQbGVhc2UgZW50ZXIgdGhlIHZhbHVlIGZyb20gezB9IHRvIHsxfS5cIixcbiAgICAgICAgXCJtYXhcIjogXCJQbGVhc2UgZW50ZXIgdGhlIHZhbHVlIG5vdCBtb3JlIHRoYW4gezB9LlwiLFxuICAgICAgICBcIm1pblwiOiBcIlBsZWFzZSBlbnRlciB0aGUgdmFsdWUgbm90IGxlc3MgdGhhbiB7MH0uXCIsXG4gICAgICAgIFwic3BhY2VcIjogXCJTcGFjZSBjYW5ub3QgYXBwZWFyIGF0IHRoZSB2ZXJ5IGJlZ2lubmluZyBvciB0aGUgZW5kLlwiLFxuICAgICAgICBcIm1vYmlsZVwiOiBcIkZvcm1hdCBlcnJvciBvZiBtb2JpbGUgcGhvbmUgbnVtYmVyLlwiLFxuICAgICAgICBcInBob25lXCI6IFwiRm9ybWF0IGVycm9yIG9mIHBob25lIG51bWJlci5cIixcbiAgICAgICAgXCJ0ZWxcIjogXCJGb3JtYXQgZXJyb3Igb2YgY29udGFjdCBudW1iZXIuXCIsXG4gICAgICAgIFwiemlwXCI6IFwiRm9ybWF0IGVycm9yIG9mIHBvc3QgY29kZS5cIixcbiAgICAgICAgXCJjdXJyZW5jeVwiOiBcIkZvcm1hdCBlcnJvciBvZiBjdXJyZW5jeS5cIixcbiAgICAgICAgXCJxcVwiOiBcIkZvcm1hdCBlcnJvciBvZiBRUSBudW1iZXIuXCIsXG4gICAgICAgIFwiYWdlXCI6IFwiQWdlIG11c3QgYmUgYW4gaW50ZWdlciBmcm9tIDAgdG8gMTIwLlwiLFxuICAgICAgICBcImlkY2FyZFwiOiBcIlBsZWFzZSBlbnRlciB5b3VyIElEIGNhcmQgTm8uIGNvcnJlY3RseS5cIixcbiAgICAgICAgXCJpcFwiOiBcIkZvcm1hdCBlcnJvciBvZiBJUCBhZGRyZXNzLlwiLFxuICAgICAgICBcInVwbG9hZEZpbGVcIjogXCJVcGxvYWQgZmlsZVwiLFxuICAgICAgICBcInBlck51bUNoZWNrXCI6IFwiUGxlYXNlIGVudGVyIGEgbnVtYmVyIGdyZWF0ZXIgdGhhbiAwIGFuZCBubyBncmVhdGVyIHRoYW4gMTAwLCB3aXRoIGxlc3MgdGhhbiB7MH0gZGlnaXRzIGFmdGVyIHRoZSBkZWNpbWFsIHBvaW50LlwiLFxuICAgICAgICBcInN0cmluZ0NoZWNrXCI6IFwiT25seSBub24tc3BlY2lhbCBjaGFyYWN0ZXJzIGNvbXBvc2VkIG9mIENoaW5lc2UgY2hhcmFjdGVycywgRW5nbGlzaCBsZXR0ZXJzLCBmaWd1cmVzIGFuZCB1bmRlcmxpbmVzIGNhbiBiZSBjb250YWluZWRcIixcbiAgICAgICAgXCJkZXZOYW1lQ2hlY2tcIjogXCJ7MH0gc2hhbGwgbm90IGNvbnRhaW4gPCAnID4gJiBcXFwiICwgfCBudWxsXCIsXG4gICAgICAgIFwic2lnbnNDaGVja1wiOiBcIkNvbW1hIGNhbm5vdCBiZSBpbnB1dFwiLFxuICAgICAgICBcIlBTTmFtZUNoZWNrXCI6IFwiUXVvdGF0aW9uIG1hcmtzIGF0IHRoZSBiZWdpbm5pbmcgYW5kIGVuZCBvZiB0aGUgc3RhdGlvbiBuYW1lIGNhbm5vdCBiZSB0aGUgc2FtZVwiLFxuICAgICAgICBcInBvcnRcIjogXCJQb3J0IHNob3VsZCBiZSBhbiBpbnRlZ2VyIGJldHdlZW4gMCBhbmQgNjU1MzVcIixcbiAgICAgICAgXCJwb3NpdGl2ZUludFwiOiBcIlBsZWFzZSBpbnB1dCBhIHBvc2l0aXZlIGludGVnZXIuXCIsXG4gICAgICAgIFwidmFjU2VwZWNpYWxTdHJpbmdcIjogXCJTcGVjaWFsIGNoYXJhY3RlcnMgc3VjaCBhcyA8ICcgPiAmIC8gLCB8IG51bGwgZXRjLiBzaGFsbCBub3QgYmUgaW5jbHVkZWQuXCIsXG4gICAgICAgIFwic3BlY2lhbENoYXJzXCI6IFwiU3BlY2lhbCBjaGFyYWN0ZXJzIHN1Y2ggYXMgPCAnID4gJiBcXFwiICwgXFxcXCAvIHwgeyB9IG51bGwgZXRjLiBzaGFsbCBub3QgYmUgaW5jbHVkZWQuXCIsXG4gICAgICAgIFwidmFsTnVtYmVyQ2hlY2tcIjogXCJQbGVhc2UgaW5wdXQgYSBudW1iZXJcIixcbiAgICAgICAgXCJsdFwiOiBcIlBsZWFzZSBpbnB1dCBhIG51bWJlciBsZXNzIHRoYW4gezB9XCIsXG4gICAgICAgIFwibGVcIjogXCJQbGVhc2UgaW5wdXQgYSBudW1iZXIgbGVzcyB0aGFuIG9yIGVxdWFsIHRvIHswfVwiLFxuICAgICAgICBcImd0XCI6IFwiUGxlYXNlIGlucHV0IGEgbnVtYmVyIGdyZWF0ZXIgdGhhbiB7MH1cIixcbiAgICAgICAgXCJnZVwiOiBcIlBsZWFzZSBpbnB1dCBhIG51bWJlciBncmVhdGVyIHRoYW4gb3IgZXF1YWwgdG8gezB9XCJcbiAgICB9LFxuXG4gICAgXCJhamF4XCI6IHtcbiAgICAgICAgXCJnYXRld2F5VGltZW91dFwiOiBcIk5ldHdvcmsgYWJub3JtYWxpdHkgb2NjdXJzLiBJdCBpcyBwb3NzaWJsZSB0aGF0IHlvdSBoYXZlIGJlZW4gZGlzY29ubmVjdGVkIHdpdGggdGhlIHNlcnZlciwgcGxlYXNlIHRyeSBhZ2FpbiBsYXRlciB0byByZWxvYWQgdGhlIHBhZ2UuXCIsXG4gICAgICAgIFwiY29ubmVjdEVycm9yXCI6IFwiTmV0d29yayBjb25uZWN0aW9uIGFibm9ybWFsaXR5IG9jY3VycywgcGxlYXNlIGNoZWNrIHRoZSBzZXJ2ZXIuXCIsXG4gICAgICAgIFwiYmFkZ2F0ZXdheVwiOiBcIk5ldHdvcmsgY29ubmVjdGlvbiBhYm5vcm1hbGl0eSBvY2N1cnMsIHBsZWFzZSBjaGVjayB0aGUgc2VydmVyLlwiLFxuICAgICAgICBcImVycm9yXCI6IFwiU2VydmVyIGFibm9ybWFsaXR5IG9jY3VycywgcGxlYXNlIGNoZWNrIHRoZSBzZXJ2ZXIuXCIsXG4gICAgICAgIFwibm9SaWdodFwiOiBbXG4gICAgICAgICAgICBcIlRoZSB1c2VyIGhhcyBubyBhdXRob3JpemF0aW9uXCIsXG4gICAgICAgICAgICBcIlNvcnJ5LCB5b3UgZG8gbm90IGhhdmUgdGhlIFwiLFxuICAgICAgICAgICAgXCJhdXRob3JpdHkgdG8gYWNjZXNzIHRoaXMgYWRkcmVzcy5cIlxuICAgICAgICBdLFxuICAgICAgICBcIm5vRm91bmRcIjogW1xuICAgICAgICAgICAgXCJUaGUgbGluayBkb2VzIG5vdCBleGlzdC5cIixcbiAgICAgICAgICAgIFwiU29ycnksIHRoZSBhZGRyZXNzIHlvdSBhcmUgdHJ5aW5nIHRvIGFjY2VzcyBcIixcbiAgICAgICAgICAgIFwiZG9lcyBub3QgZXhpc3QuXCJcbiAgICAgICAgXVxuICAgIH0sXG5cbiAgICBcInVuaXRcIjoge1xuICAgICAgICBcInRvcFBvd2VyVW5pdFwiOiBcImtXwrdoXCIsXG4gICAgICAgIFwicG93ZXJVbml0XCI6IFwiMTBNV8K3aFwiLFxuICAgICAgICBcIktXaFwiOiBcImtXaFwiLFxuICAgICAgICBcIldLV2hcIjogXCJ0aG91c2FuZCBLV2hcIixcbiAgICAgICAgXCJLV1wiOiBcImtXXCIsXG4gICAgICAgIFwiTVdcIjogXCJNV1wiLFxuICAgICAgICBcIkdXXCI6IFwiR1dcIixcbiAgICAgICAgXCJHV2hcIjogXCJHV2hcIixcbiAgICAgICAgXCJjbzJVbml0XCI6IFwidFwiLFxuICAgICAgICBcImNvYWxVbml0XCI6IFwidFwiLFxuICAgICAgICBcInRyZWVVbml0XCI6IFwibTNcIixcbiAgICAgICAgXCJjbzJXVW5pdFwiOiBcIjEwa3RcIixcbiAgICAgICAgXCJjb2FsV1VuaXRcIjogXCIxMGt0XCIsXG4gICAgICAgIFwidHJlZVdVbml0XCI6IFwiMTBrbTNcIixcbiAgICAgICAgXCJ0cmVlX3VuaXRcIjogXCIgXCIsXG4gICAgICAgIFwid3RyZWVfdW5pdFwiOiBcIjEwIHRob3VzYW5kXCIsXG4gICAgICAgIFwiY3VyUmFkaWFudFVuaXRcIjogXCJrV8K3aC9tMlwiLFxuICAgICAgICBcInJhZGlhbnRVbml0XCI6IFwiVy9tMlwiLFxuICAgICAgICBcInBvd2VyQ2FwYWNpdHlVbml0XCI6IFwia1dcIixcbiAgICAgICAgXCJ0ZW1wZXJhdHVyZVVuaXRcIjogXCLihINcIixcbiAgICAgICAgXCJsbmdMYXRVbml0XCI6IFwiwrBcIixcbiAgICAgICAgXCJzcGVlZFVuaXRcIjogXCJtL3NcIixcbiAgICAgICAgXCJkZWdyZWVcIjogXCJkZWdyZWVcIixcbiAgICAgICAgXCJUSW5zb2xhdGlvblwiOiBcIk1KL+OOoVwiLFxuICAgICAgICBcIklycmFkaWFuY2VcIjogXCJXL+OOoVwiLFxuICAgICAgICBcImluc3RhbGxDYXBhY2l0eVVuaXRcIjogXCJNV1wiLFxuICAgICAgICBcInBvd2VyUmF0ZVwiOiBcIiVcIixcbiAgICAgICAgXCJ0aW1lc1wiOiBcInRpbWVzXCIsXG4gICAgICAgIFwicHJvZHVjdFBvd2VyVW5pdFwiOiBcImtXaFwiLFxuICAgICAgICBcInVuaXRfdG9uXCI6IFwidG9uXCIsXG4gICAgICAgIFwiY3VycmVudFVuaXRcIjogXCJBXCIsXG4gICAgICAgIFwidm9sdGFnZVVuaXRcIjogXCJWXCIsXG4gICAgICAgIFwicGVyY2VudFVuaXRcIjogXCIlXCIsXG4gICAgICAgIFwiV1VuaXRcIjogXCJXXCIsXG4gICAgICAgIFwia1dVbml0XCI6IFwia1dcIixcbiAgICAgICAgXCJXaFVuaXRcIjogXCJXaFwiLFxuICAgICAgICBcImtXaFVuaXRcIjogXCJrV2hcIixcbiAgICAgICAgXCJWYXJVbml0XCI6IFwiVmFyXCIsXG4gICAgICAgIFwia1ZhclVuaXRcIjogXCJrVmFyXCIsXG4gICAgICAgIFwia1ZhcmhVbml0XCI6IFwia1ZhcmhcIixcbiAgICAgICAgXCJrVkFVbml0XCI6IFwia1ZBXCIsXG4gICAgICAgIFwiSHpVbml0XCI6IFwiSHpcIixcbiAgICAgICAgXCJNzqlVbml0XCI6IFwiTc6pXCIsXG4gICAgICAgIFwiTkFcIjogXCJOb25lXCIsXG4gICAgICAgIFwidGltZURlbVwiOiBbXG4gICAgICAgICAgICBcIlllYXJcIixcbiAgICAgICAgICAgIFwiTW9udGhcIixcbiAgICAgICAgICAgIFwiRGF5XCIsXG4gICAgICAgICAgICBcIldlZWtcIixcbiAgICAgICAgICAgIFwiaFwiLFxuICAgICAgICAgICAgXCJtXCIsXG4gICAgICAgICAgICBcInNcIixcbiAgICAgICAgICAgIFwiSG91clwiLFxuICAgICAgICAgICAgXCJtaW51dGVcIixcbiAgICAgICAgICAgIFwic2Vjb25kXCJcbiAgICAgICAgXSxcbiAgICAgICAgXCJudW1iZXJVbml0XCI6IFtcbiAgICAgICAgICAgIFwiXCIsXG4gICAgICAgICAgICBcInRlblwiLFxuICAgICAgICAgICAgXCJodW5kcmVkXCIsXG4gICAgICAgICAgICBcInRob3VzYW5kXCIsXG4gICAgICAgICAgICBcIjEwIHRob3VzYW5kXCIsXG4gICAgICAgICAgICBcIjEwMCB0aG91c2FuZFwiLFxuICAgICAgICAgICAgXCJtaWxsaW9uXCIsXG4gICAgICAgICAgICBcIjEwIG1pbGxpb25cIixcbiAgICAgICAgICAgIFwiMTAwIG1pbGxpb25cIixcbiAgICAgICAgICAgIFwiYmlsbGlvblwiLFxuICAgICAgICAgICAgXCIxMCBiaWxsaW9uXCIsXG4gICAgICAgICAgICBcIjEwMCBiaWxsaW9uXCIsXG4gICAgICAgICAgICBcInRyaWxsaW9uXCIsXG4gICAgICAgICAgICBcIjEwIHRyaWxsaW9uXCIsXG4gICAgICAgICAgICBcIjEwMCB0cmlsbGlvblwiLFxuICAgICAgICAgICAgXCIxMDAwIHRyaWxsaW9uXCJcbiAgICAgICAgXSxcbiAgICAgICAgXCJnZW9ncmFwaGljQXppbXV0aFwiOiBbXG4gICAgICAgICAgICBcIk5vcnRoKE4pXCIsXG4gICAgICAgICAgICBcIk5vcnRoLW5vcnRoZWFzdChOTkUpXCIsXG4gICAgICAgICAgICBcIk5vcnRoZWFzdChORSlcIixcbiAgICAgICAgICAgIFwiRWFzdC1ub3J0aGVhc3QoRU5FKVwiLFxuICAgICAgICAgICAgXCJFYXN0KEUpXCIsXG4gICAgICAgICAgICBcIkVhc3Qtc291dGhlYXN0KEVTRSlcIixcbiAgICAgICAgICAgIFwiU291dGhlYXN0KFNFKVwiLFxuICAgICAgICAgICAgXCJTb3V0aC1zb3V0aGVhc3QoU1NFKVwiLFxuICAgICAgICAgICAgXCJTb3V0aChTKVwiLFxuICAgICAgICAgICAgXCJTb3V0aC1zb3V0aHdlc3QoU1NXKVwiLFxuICAgICAgICAgICAgXCJTb3V0aHdlc3QoU1cpXCIsXG4gICAgICAgICAgICBcIldlc3Qtc291dGh3ZXN0KFdTVylcIixcbiAgICAgICAgICAgIFwiV2VzdChXKVwiLFxuICAgICAgICAgICAgXCJXZXN0LW5vcnRod2VzdChXTlcpXCIsXG4gICAgICAgICAgICBcIk5vcnRod2VzdChOVylcIixcbiAgICAgICAgICAgIFwiTm9ydGgtbm9ydGh3ZXN0KE5OVylcIlxuICAgICAgICBdLFxuICAgICAgICBcImRhdGVMaW1pdFwiOiBbXG4gICAgICAgICAgICBcIkxhc3QgeWVhclwiLFxuICAgICAgICAgICAgXCJUaGlzIHllYXJcIixcbiAgICAgICAgICAgIFwiVGhlIG5leHQgeWVhclwiLFxuICAgICAgICAgICAgXCJMYXN0IG1vbnRoXCIsXG4gICAgICAgICAgICBcIlRoaXMgbW9udGhcIixcbiAgICAgICAgICAgIFwiVGhlIG5leHQgbW9udGhcIixcbiAgICAgICAgICAgIFwieWVzdGVyZGF5XCIsXG4gICAgICAgICAgICBcIlRvZGF5XCIsXG4gICAgICAgICAgICBcInRvbW9ycm93XCIsXG4gICAgICAgICAgICBcInRvdGFsXCJcbiAgICAgICAgXSxcbiAgICAgICAgXCJicmFja2V0c1wiOiBbXG4gICAgICAgICAgICBcIihcIixcbiAgICAgICAgICAgIFwiKVwiXG4gICAgICAgIF0sXG4gICAgICAgIFwiY29sb25cIjogXCI6XCIsXG4gICAgICAgIFwic3RhdGlvblVuaXRcIjogXCIgXCIsXG4gICAgICAgIFwiaW52ZXJ0ZXJVbml0XCI6IFwiIFwiLFxuICAgICAgICBcInN0cmluZ1VuaXRcIjogXCIgXCIsXG4gICAgICAgIFwiUk1CVW5pdFwiOiBcInl1YW5cIixcbiAgICAgICAgXCJXUk1CVW5pdFwiOiBcIjEwMDAwIHl1YW5cIixcbiAgICAgICAgXCJLUk1CVW5pdFwiOiBcIjEwMDAgeXVhblwiLFxuICAgICAgICBcIktXVW5pdFwiOiBcIktXXCIsXG4gICAgICAgIFwiV0tXVW5pdFwiOiBcIjEwTVdcIixcbiAgICAgICAgXCJob3VzZVVuaXRcIjogXCIgXCIsXG4gICAgICAgIFwiYWxhcm1Vbml0XCI6IFwiIFwiLFxuICAgICAgICBcInBlcnNvblVuaXRcIjogXCJwZW9wbGVcIlxuICAgIH0sXG5cbiAgICBcImRhdGVGb3JtYXRcIjoge1xuICAgICAgICBcInl5eXltbWRkaGhzc1wiOiBcImRkL01NL3l5eXkgSEg6bW06c3NcIixcbiAgICAgICAgXCJ5eXl5bW1kZFwiOiBcImRkL01NL3l5eXlcIixcbiAgICAgICAgXCJ5eXl5bW1cIjogXCJNTS95eXl5XCIsXG4gICAgICAgIFwieXl5eVwiOiBcInl5eXlcIixcbiAgICAgICAgXCJNTWRkXCI6IFwiZGQtTU1cIixcbiAgICAgICAgXCJ5eXl5ZGRtbVwiOiBcImRkL01NL3l5eXlcIlxuICAgIH0sXG5cbiAgICBcIm1hcFwiOiB7XG4gICAgICAgIFwiem9vbXNUaXRsZVwiOiBbXG4gICAgICAgICAgICBcIlpvb20gaW5cIixcbiAgICAgICAgICAgIFwiWm9vbSBvdXRcIlxuICAgICAgICBdLFxuICAgICAgICBcIm1hcFR5cGVcIjogW1xuICAgICAgICAgICAgXCIyRCBtYXBcIixcbiAgICAgICAgICAgIFwiU2F0ZWxsaXRlIG1hcFwiXG4gICAgICAgIF1cbiAgICB9XG59KTsiXSwiZmlsZSI6Imxhbmd1YWdlL2VuX1VLL2NvbW1vbi5qcyJ9
